name: Upload fonts to CDN
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish fonts"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

env:
  CDN_BUCKET: gc-design-system-production-cdn
  CDN_REGION: ca-central-1
  PACKAGE_NAME: '@cdssnc/gcds-fonts'

jobs:
  upload-to-cdn:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Configure AWS credentials using OIDC
        if: github.event.workflow_run.conclusion == 'success'
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-fonts-apply
          role-session-name: CDNPublish
          aws-region: ${{ env.CDN_REGION }}

      - name: Update CDN
        if: github.event.workflow_run.conclusion == 'success'
        run: |
          VERSION="$(cat package.json | jq -r .version)"
          PUBLISHED_PACKAGE="${{ env.PACKAGE_NAME }}@$VERSION"

          aws s3 sync ./fonts/ s3://${{ env.CDN_BUCKET }}/"$PUBLISHED_PACKAGE"/ --delete
          aws s3 sync ./fonts/ s3://${{ env.CDN_BUCKET }}/${{ env.PACKAGE_NAME }}@latest/ --delete

          # Check if specific files exist in the root of the CDN bucket for both the versioned and latest paths
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key "$PUBLISHED_PACKAGE"/icons/gcds-icons.css
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key ${{ env.PACKAGE_NAME }}@latest/icons/gcds-icons.css

          aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_CLOUDFRONT_DIST_ID }} --paths "/*"

      - name: Report deployment to Sentinel
        if: github.event.workflow_run.conclusion == 'success'
        uses: cds-snc/sentinel-forward-data-action@main
        with:
          input_data: '{"product": "design-system", "sha": "${{ github.sha }}", "version": "${{steps.publish.outputs.id}}", "repository": "${{ github.repository }}", "environment": "production", "status": "${{ job.status }}"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}